        }
      });
    } catch (err) {
      // Handle any errors
      res.status(400).json({
        status: 'error',
        message: err.message
      });
    }}
  
  
  // Update a property by ID
  exports.updateUser = async (req, res) => {
    try {
      // Extract the files from the request
      const files = req.files;
  
      // Create an object to hold the updates
      const updates = { ...req.body };
  
      // If files are uploaded, add their paths to the updates object
      if (files.licenceFront) {
        updates.licenceFront = files.licenceFront[0].path;
      }
      if (files.licenceBack) {
        updates.licenceBack = files.licenceBack[0].path;
      }
  
      // Update the user document in the database
      const user = await User.findByIdAndUpdate(req.params.id, updates, {
        new: true,
        runValidators: true, // Ensure any schema validation rules are applied
      });
  
      res.status(200).json({
        status: 'success',
        data: {
          user,
        },
      });
    } catch (err) {
