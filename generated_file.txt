      status: "error",
      message: err.message,
    });
  }
};
exports.updateRejectStatus = async (req, res) => {
  try {
    const propertyId = req.params.id;
    await Property.findByIdAndUpdate(propertyId,{reported: false},{new: true, runValidators: true})
    .then(updatedProperty => res.json(updatedProperty))
    .catch(err => res.status(400). json(err));
  } catch (err) {
    res.status(400).json({
      status: "error",
      message: err.message,
    });
  }
};


// Delete a property by ID
exports.deleteProperty = async (req, res) => {
  try {
    await Property.findByIdAndDelete(req.params.id);
    res.status(204).json({
      status: "success",
      data: null,
    });
  } catch (err) {
    res.status(400).json({
      status: "error",
      message: err.message,
    });
  }
};


const Bookmark = require("../models/bookmarkModel");
const multer = require("multer");
const path = require("path")




exports.getAllBookmarks = async (req, res) => {
  try {
    const bookmark = await Bookmark.find();
    res.status(200).json({
      status: "success",
      data: {
        bookmark,
      },
    });
  } catch (err) {
    res.status(500).json({
      status: "error",
      message: err.message,
    });
  }
};

