        message: 'Property not found'
      });
    }
  };


  exports.updateUserStatus = async (req, res) => {
    try {
      const userId = req.params.id;
      await User.findByIdAndUpdate(userId,{userStatus: "verified"},{new: true, runValidators: true})
      .then(updatedUser => res.json(updatedUser))
      .catch(err => res.status(400). json(err));
    } catch (err) {
      res.status(400).json({
        status: "error",
        message: err.message,
      });
    }
  };
  exports.rejectUserStatus = async (req, res) => {
    try {
      const userId = req.params.id;
      await User.findByIdAndUpdate(userId,{userStatus: "rejected"},{new: true, runValidators: true})
      .then(updatedUser => res.json(updatedUser))
      .catch(err => res.status(400). json(err));
    } catch (err) {
      res.status(400).json({
        status: "error",
        message: err.message,
      });
    }
  };

  exports.getUserByEmail = async (req, res) => {
    try {
      const user = await User.findOne({ email: req.params.email });
      if (!user) {
        return res.status(404).json({
