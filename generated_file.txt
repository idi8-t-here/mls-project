          status: 'error',
          message: 'User not found'
        });
      }
      res.status(200).json({
        status: 'success',
        data: {
          user
        }
      });
    } catch (err) {
      res.status(500).json({
        status: 'error',
        message: 'Internal server error'
      });
    }
  };

  
  // Create a new property
  exports.createUser = async (req, res) => {
    try {
      // Create a new user object from the request body
      const user = new User(req.body);
  
      // If there are uploaded files, assign the image path to the user
      if (req.files && req.files['image']) {
        user.image = req.files['image'][0].path;
      }
  
      // Save the user to the database
      await user.save();
  
      // Send a successful response
      res.status(201).json({
        status: 'success',
        data: {
          user
        }
      });
    } catch (err) {
      // Handle any errors
      res.status(400).json({
        status: 'error',
        message: err.message
      });
    }}
  
  
  // Update a property by ID
  exports.updateUser = async (req, res) => {
    try {
      // Extract the files from the request
      const files = req.files;
  
      // Create an object to hold the updates
      const updates = { ...req.body };
  
      // If files are uploaded, add their paths to the updates object
      if (files.licenceFront) {
